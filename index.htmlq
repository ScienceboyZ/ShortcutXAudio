<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>WAV Splitter – 1-Second Chunks</title>

  <!-- FFmpeg.wasm -->
  <script src="https://unpkg.com/@ffmpeg/ffmpeg@0.12.6/dist/ffmpeg.min.js"></script>
  <!-- JSZip -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js"></script>

  <style>
    body { font-family: sans-serif; padding: 1rem; max-width: 600px; margin: auto; }
    input, button { font-size: 1rem; }
    #downloadLink { margin-top: 1rem; display: block; font-weight: bold; }
  </style>
</head>
<body>
  <h2>WAV Splitter – 1-Second Chunks</h2>

  <input type="file" id="fileInput" accept=".wav" />
  <button onclick="splitAudio()">Split Audio</button>

  <p id="status">Status: Waiting for file...</p>
  <a id="downloadLink" style="display: none;" download="chunks.zip">Download ZIP</a>

  <script>
    const { createFFmpeg, fetchFile } = FFmpeg;
    const ffmpeg = createFFmpeg({ log: true });

    async function splitAudio() {
      const input = document.getElementById('fileInput');
      const status = document.getElementById('status');
      const link = document.getElementById('downloadLink');

      if (!input.files.length) {
        alert('Please select a WAV file.');
        return;
      }

      const file = input.files[0];

      status.textContent = 'Loading FFmpeg...';
      if (!ffmpeg.isLoaded()) await ffmpeg.load();

      status.textContent = 'Uploading WAV file...';
      const data = await fetchFile(file);
      ffmpeg.FS('writeFile', 'input.wav', data);

      status.textContent = 'Splitting into 1-second chunks...';
      await ffmpeg.run(
        '-i', 'input.wav',
        '-f', 'segment',
        '-segment_time', '1',
        '-c', 'copy',
        'chunk_%03d.wav'
      );

      const files = ffmpeg.FS('readdir', '/').filter(name => name.startsWith('chunk_') && name.endsWith('.wav'));

      if (files.length === 0) {
        status.textContent = '❌ No chunks generated. Try a shorter WAV file.';
        return;
      }

      status.textContent = `✅ ${files.length} chunks created. Zipping...`;

      const zip = new JSZip();
      for (const name of files) {
        const chunk = ffmpeg.FS('readFile', name);
        zip.file(name, chunk);
      }

      const blob = await zip.generateAsync({ type: 'blob' });
      link.href = URL.createObjectURL(blob);
      link.style.display = 'block';
      status.textContent = '✅ Done! Download your ZIP below:';
    }
  </script>
</body>
</html>
